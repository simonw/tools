#!/usr/bin/perl -w
# scala_count - count physical lines of code in Scala programs.
# Usage: scala_count [-f file] [list_of_files]
#  file: file with a list of files to count (if "-", read list from stdin)
#  list_of_files: list of files to count
#  -f file or list_of_files can be used, or both
#
# Scala uses C-style comments: // for single-line, /* */ for multi-line
# This counter handles both types of comments.

# This is part of SLOCCount, a toolsuite that counts
# source lines of code (SLOC).
# Copyright (C) 2001-2004 David A. Wheeler.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

$total_sloc = 0;

# Do we have "-f" (read list of files from second argument)?
if (($#ARGV >= 1) && ($ARGV[0] eq "-f")) {
  # Yes, we have -f
  if ($ARGV[1] eq "-") {
    # The list of files is in STDIN
    while (<STDIN>) {
      chomp ($_);
      &count_file ($_);
    }
  } else {
    # The list of files is in the file $ARGV[1]
    open (FILEWITHLIST, $ARGV[1]) || die "Error: Could not open $ARGV[1]\n";
    while (<FILEWITHLIST>) {
      chomp ($_);
      &count_file ($_);
    }
    close FILEWITHLIST;
  }
  shift @ARGV; shift @ARGV;
}
# Process all (remaining) arguments as file names
while ($file = shift @ARGV) {
  &count_file ($file);
}

print "Total:\n";
print "$total_sloc\n";

sub count_file {
  my ($file) = @_;
  my $sloc = 0;
  my $incomment = 0;

  open (FILE, $file);
  while (<FILE>) {
    if ($incomment) {
      if (m/\*\//) {  # End of multi-line comment
        s/^.*?\*\///;
        $incomment = 0;
      } else {
        $_ = "";  # whole line is a comment
      }
    }
    s/\/\/.*//;       # Delete single-line comments
    if (m/\/\*/) {    # Start of multi-line comment
      s/\/\*.*?\*\///g;  # Delete /* ... */ on same line
      if (m/\/\*/) {
        s/\/\*.*//;
        $incomment = 1;
      }
    }
    if (m/\S/) {$sloc++;}
  }
  print "$sloc $file\n";
  $total_sloc += $sloc;
  close (FILE);
}
